{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "# String.prototype.matchAll()\n\n매개변수를 문자나 정규식을 사용하면 된다. 내부적으로는 RegExp의 matchAll 이라는 메서드를 사용한다. \n\n🔗 [MDN: String.prototype.matchAll()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/matchAll)"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## 기본 사용법\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "const msgText = 'Your phone number is 010-1233-4567 and 010-7890-1234'\nconsole.log(msgText.match(/010/g))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ '010', '010' ]",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const result1 = msgText.matchAll(/010/g)\nconsole.log([...result1])"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[",
                                "  [",
                                "    '010',",
                                "    index: 21,",
                                "    input: 'Your phone number is 010-1233-4567 and 010-7890-1234',",
                                "    groups: undefined",
                                "  ],",
                                "  [",
                                "    '010',",
                                "    index: 39,",
                                "    input: 'Your phone number is 010-1233-4567 and 010-7890-1234',",
                                "    groups: undefined",
                                "  ]",
                                "]",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "## 정규식의 group capturing\n---\n🔗 [정규표현식](https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide/Regular_Expressions)\n\n- 어서션: 어서션에는 줄이나 단어의 시작과 끝을 나타내는 경계와, 일치가 가능한 방법을 나타내는 패턴(전방탐색, 후방탐색, 조건 표현식 등)이 포함\n```\n^, $, x(?=y), x(?!y), (?<=y)x, (?<!y)x, \\b, \\B\n```\n- 문자클래스 : 글자와 숫자처럼 다른 유형의 문자를 구분\n```\n\\, ., \\cX, \\d, \\D, \\f, \\n, \\r, \\s, \\S, \\t, \\v, \\w, \\W, \\0, \\xhh, \\uhhhh, \\uhhhhh, [\\b]\n```\n- 그룹과 범위 : 표현 문자의 그룹과 범위를 나타냅니다.\n```\n(x), (?:x), (?<Name>x), x|y, [xyz], [^xyz], \\Number\n```\n- 수량자 : 일치할 문자나 표현이 반복되어야 할 횟수를 나타냅니다.\n```\n*, +, ?, x{n}, x{n,}, x{n,m}\n```\n- 유니코드 속성 이스케이프 : 대/소문자, 수학 기호, 문장 부호처럼, 유니코드 문자 속성에 따라 문자를 구분\n```\n\\p{UnicodeProperty}, \\P{UnicodeProperty}\n```\n---\nmatch() 를 사용했을 때 'g' 옵션을 주면 정규식의 그룹에 대한 정보가 누락된다. "
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "const msgText1 = 'Your phone number is 010-1233-4567 and 011-890-1234'\nconst resultArray1 = msgText1.matchAll(/\\d{3}-\\d{3,4}-\\d{4}/g)\nconsole.log([...resultArray1])"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[",
                                "  [",
                                "    '010-1233-4567',",
                                "    index: 21,",
                                "    input: 'Your phone number is 010-1233-4567 and 011-890-1234',",
                                "    groups: undefined",
                                "  ],",
                                "  [",
                                "    '011-890-1234',",
                                "    index: 39,",
                                "    input: 'Your phone number is 010-1233-4567 and 011-890-1234',",
                                "    groups: undefined",
                                "  ]",
                                "]",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "matchAll() 을 사용하면 정규식의 그룹 정보를 그대로 얻을 수 있다."
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                ""
            ],
            "outputs": []
        }
    ]
}