{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "# 구조분해 할당\n\n> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\n\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## 맛보기"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "const orders = [\n    {id: \"1\", orderCode:\"R001\", orderDate:\"2023-07-29T23:34:27.632Z\"},\n    {id: \"2\", orderCode:\"C002\", orderDate:\"2023-07-29T23:34:27.672Z\"},\n    {id: \"3\", orderCode:\"R001\", orderDate:\"2023-07-29T23:35:27.876Z\"},\n    {id: \"4\", orderCode:\"E023\", orderDate:\"2023-07-29T23:35:28.901Z\"},\n]\n\nconst [...todayOrders] = orders\nconsole.log(todayOrders)\n\nconst todaysInventory = Object.assign({}, {orders} )\nconsole.log(todaysInventory)\n\nconst todayOrders2 = orders\nconsole.log(todayOrders2)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[",
                                "  { id: '1', orderCode: 'R001', orderDate: '2023-07-29T23:34:27.632Z' },",
                                "  { id: '2', orderCode: 'C002', orderDate: '2023-07-29T23:34:27.672Z' },",
                                "  { id: '3', orderCode: 'R001', orderDate: '2023-07-29T23:35:27.876Z' },",
                                "  { id: '4', orderCode: 'E023', orderDate: '2023-07-29T23:35:28.901Z' }",
                                "]",
                                "{",
                                "  orders: [",
                                "    {",
                                "      id: '1',",
                                "      orderCode: 'R001',",
                                "      orderDate: '2023-07-29T23:34:27.632Z'",
                                "    },",
                                "    {",
                                "      id: '2',",
                                "      orderCode: 'C002',",
                                "      orderDate: '2023-07-29T23:34:27.672Z'",
                                "    },",
                                "    {",
                                "      id: '3',",
                                "      orderCode: 'R001',",
                                "      orderDate: '2023-07-29T23:35:27.876Z'",
                                "    },",
                                "    {",
                                "      id: '4',",
                                "      orderCode: 'E023',",
                                "      orderDate: '2023-07-29T23:35:28.901Z'",
                                "    }",
                                "  ]",
                                "}",
                                "[",
                                "  { id: '1', orderCode: 'R001', orderDate: '2023-07-29T23:34:27.632Z' },",
                                "  { id: '2', orderCode: 'C002', orderDate: '2023-07-29T23:34:27.672Z' },",
                                "  { id: '3', orderCode: 'R001', orderDate: '2023-07-29T23:35:27.876Z' },",
                                "  { id: '4', orderCode: 'E023', orderDate: '2023-07-29T23:35:28.901Z' }",
                                "]",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "## array에서 구조분해 할당"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "// 기본 사용법 \nconst foo = ['one', \"two\", \"three\", \"four\",null]\n\nconst [red, yello, green, white, black] = foo\nconsole.log(red)\nconsole.log(yello)\nconsole.log(green)\nconsole.log(white)\nconsole.log(black)  // black은 배열에 없으므로 undefined"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "one",
                                "two",
                                "three",
                                "four",
                                "undefined",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "// 변수값 교환하기 \nfunction switchVariable() {\n    let a = 1;  // 세미콜론 없으면 안됩니다. \n    let b = 3;\n\n    [a, b] = [b, a];\n\n    console.log(a);\n    console.log(b);\n}\n\nswitchVariable()  "
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "// 함수 리턴값 받기 \nfunction arrayReturnFunction() {\n    return [1,2,3,4]\n}\n\nconst [a,b,c,d] = arrayReturnFunction()\nconsole.log(a)\nconsole.log(b)\nconsole.log(c)\nconsole.log(d)"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "// 정규식 활용\nconst url = \"https://developer.mozilla.org/en-US/docs/Web/JavaScript\";\nconst parsedURL = /^(\\w+):\\/\\/([^/]+)\\/(.*)$/.exec(url);\nconsole.log(parsedURL);\n\nconst [ , protocol, fullhost, fullpath] = parsedURL;\nconsole.log(protocol)\n// 브라우저에서는 실행됩니다. "
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## object에서 구조분해 할당"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "// 기본 사용법 \n\nconst user = { id: 42, isVerified: true};\nconst {id, isVerified} = user;\nconsole.log(id) \nconsole.log(isVerified) "
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "// 가져오고 변수명도 바꾸기 \nconst user = { id: 42, isVerified: true};\nconst {id: seq, isVerified: auth, name : nick = 'foo'} = user\n\nconsole.log(seq)\nconsole.log(auth)\nconsole.log(nick)"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "// 파라미터로 분해해서 받기\nconst user = {\n    id: 42,\n    displayName: \"jdoe\",\n    fullName: {\n        firstName: \"Jane\",\n        lastName: \"Doe\",\n    },\n};\n\nfunction userFullName({ fullName: nick = {firstName:'foo', lastName:'bar'} }) {\n    return nick.firstName + ' ' + nick.lastName;\n}\n\nconsole.log(userFullName(user))\n\nconst user2 = {\n    id: 42,\n    displayName: \"jdoe\"\n}\n\nconsole.log(userFullName(user2))"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "// primitive 값을 구조분해 할당해보면\nconst { a, toFixed } = 1\nconsole.log(a, toFixed)  // 안된다. \n\nconst {} = null // 이런것도 안된다. "
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "// prototype\n\nconst obj = {\n    self: \"123\",\n    __proto__: {\n      prot: \"456\",\n    },\n  };\n  const { self, prot } = obj;\n  \n  console.log(self); // \"123\"\n  console.log(prot); // \"456\"\n\n  // 참고로 Object.prototype.__proto__ 의 직접적인 사용은 권장되지 않는다.\n  // Object.getPrototyeOf() Object.setPrototypeOf() 등을 사용하라. \n  // https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/proto"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## 끝."
            ],
            "outputs": []
        }
    ]
}